.left-main-container {
    display: flex;
    flex-direction: column;
    width: 25%;
    border: 2px solid black;
    border-radius: 20px;
    margin: 1rem;
    padding: 1rem;
}

.projects-container, .todo-container {
    width: calc(100% - 1rem);
    height: auto;
    border: 2px solid black;
    border-radius: 20px;
    padding: 0.5rem;
    margin-block: 1rem;
}

h1 {
    display: flex;
    justify-content: space-between;
}

ul, li {
    display: flex;
    flex-direction: column;
    align-content: space-between;
}

.prj-btn-container {
    display: flex;
    justify-content: space-evenly;
    align-content: center;
    padding: 0.5em;
}

button {
    width: fit-content;
    height: fit-content;
    border: 2px solid black;
    border-radius: 7px;
    text-align: center;
    cursor: pointer;
    padding: 0.1em;
}

.add {
    font-size: 25px;
    padding: 0.025em;

}

button:hover {
    background-color: grey;
}

/* css from mdn example */
/*   Open state of the dialog  */
dialog[open] {
    opacity: 1;
    transform: scaleY(1);
}

/*   Closed state of the dialog   */
dialog {
    opacity: 0;
    transform: scaleY(0);
    transition:
        opacity 0.7s ease-out,
        transform 0.7s ease-out,
        overlay 0.7s ease-out allow-discrete,
        display 0.7s ease-out allow-discrete;
        position: fixed;
        margin: calc(100% - 90%) auto;
        padding: 0.7em;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
      as the specificity is the same */
      /* not supported in firefox */
@starting-style {
    dialog[open] {
        opacity: 0;
        transform: scaleY(0);
    }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
    background-color: rgb(0 0 0 / 0%);
    transition:
        display 0.7s allow-discrete,
        overlay 0.7s allow-discrete,
        background-color 0.7s;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
}

dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
  because the nesting selector cannot represent pseudo-elements. */
/* not supported in firefox */
@starting-style {
    dialog[open]::backdrop {
        background-color: rgb(0 0 0 / 0%);
    }
}