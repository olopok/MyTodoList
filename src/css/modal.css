ul,
li {
    display: flex;
    flex-direction: column;
    align-content: space-between;
}

input,
textarea {
    margin-bottom: 0.5em;
}

input[type="date"],
select {
    max-width: fit-content;
}

textarea {
    max-width: 100%;
    min-height: 50px;
    field-sizing: content;
}

.none {
    display: none;
}

/* css from mdn example */
/*   Open state of the dialog  */
dialog[open] {
    opacity: 1;
    transform: scaleY(1);
}

/*   Closed state of the dialog   */
dialog {
    width: 35%;
    height: fit-content;
    opacity: 0;
    transform: scaleY(0);
    transition:
        opacity 0.7s ease-out,
        transform 0.7s ease-out,
        overlay 0.7s ease-out allow-discrete,
        display 0.7s ease-out allow-discrete;
    position: fixed;
    margin: calc(100% - 90%) auto;
    padding: 0.7em;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
      as the specificity is the same */
/* not supported in firefox */
@starting-style {
    dialog[open] {
        opacity: 0;
        transform: scaleY(0);
    }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
    background-color: rgb(0 0 0 / 0%);
    transition:
        display 0.7s allow-discrete,
        overlay 0.7s allow-discrete,
        background-color 0.7s;
    /* Equivalent to
    transition: all 0.7s allow-discrete; */
}

dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
  because the nesting selector cannot represent pseudo-elements. */
/* not supported in firefox */
@starting-style {
    dialog[open]::backdrop {
        background-color: rgb(0 0 0 / 0%);
    }
}